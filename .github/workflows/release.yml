name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Extract version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate changelog for this version
        run: |
          # Extract changelog entry for this version
          awk '/^## \['"${{ steps.get_version.outputs.version }}"'\]/ {flag=1} flag && /^## \[/ && !/'"${{ steps.get_version.outputs.version }}"'\]/ {flag=0} flag {print}' CHANGELOG.md > release_notes.md
          # If no specific entry found, use a generic message
          if [ ! -s release_notes.md ]; then
            echo "## Version ${{ steps.get_version.outputs.version }}" > release_notes.md
            echo "" >> release_notes.md
            echo "This release includes various improvements and fixes." >> release_notes.md
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false

      - name: Build for production
        run: npm run build

      - name: Deploy to Vercel (if configured)
        if: env.VERCEL_TOKEN
        run: |
          npm i -g vercel
          vercel --prod --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}