{
  "name": "PintoPellines",
  "version": "1.0.1",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "deploy": "./deploy",
    "deploy:unsafe": "npm run build && npx convex deploy --yes && npx vercel --prod --yes",
    "safety-check": "npx tsx scripts/deployment-safety-check.ts",
    "lint": "next lint",
    "type-check": "tsc --noEmit",
    "build:mobile": "MOBILE_BUILD=true next build",
    "build:mobile:analyze": "MOBILE_BUILD=true ANALYZE=true next build",
    "build:mobile:optimized": "MOBILE_BUILD=true OPTIMIZE=true next build",
    "cap:sync": "cap sync",
    "cap:sync:android": "cap sync android",
    "cap:sync:ios": "cap sync ios",
    "cap:open:android": "cap open android",
    "cap:open:ios": "cap open ios",
    "cap:build:android": "npm run build:mobile:optimized && npm run cap:sync:android",
    "cap:build:ios": "npm run build:mobile:optimized && npm run cap:sync:ios",
    "analyze:bundle": "npx @next/bundle-analyzer",
    "seed:all": "tsx scripts/seed-database.ts all",
    "seed:cameras": "tsx scripts/seed-database.ts cameras",
    "seed:weather": "tsx scripts/seed-database.ts weather",
    "seed:payments": "tsx scripts/seed-database.ts payments",
    "seed:radio": "tsx scripts/seed-database.ts radio",
    "seed:rss": "tsx scripts/seed-database.ts rss",
    "seed:protocols": "tsx scripts/seed-database.ts protocols",
    "check-naming": "eslint --rule '@typescript-eslint/naming-convention: error' --rule 'camelcase: error'",
    "validate-structure": "node scripts/validate-structure.js",
    "format:check": "prettier --check .",
    "format:fix": "prettier --write .",
    "lint:fix": "eslint . --fix",
    "security:audit": "npm audit --audit-level high",
    "commitlint": "commitlint --edit $1",
    "clean": "rm -rf .next out node_modules/.cache",
    "prebuild": "echo 'Skipping prebuild checks for deployment'",
    "postinstall": "npm run validate-structure",
    "prepare": "husky install || true",
    "quality": "npm run type-check && npm run lint && npm run format:check && npm run security:audit",
    "version:patch": "npm version patch --no-git-tag-version",
    "version:minor": "npm version minor --no-git-tag-version",
    "version:major": "npm version major --no-git-tag-version",
    "release:patch": "git diff --quiet && git diff --staged --quiet || (echo 'Working directory not clean. Commit or stash changes first.' && exit 1) && npm run version:patch && git add package.json package-lock.json && git commit -m \"chore: bump version to $(node -p 'require(\"./package.json\").version')\" && npm run changelog && git add CHANGELOG.md && git commit --amend --no-edit && git tag v$(node -p 'require(\"./package.json\").version')",
    "release:minor": "git diff --quiet && git diff --staged --quiet || (echo 'Working directory not clean. Commit or stash changes first.' && exit 1) && npm run version:minor && git add package.json package-lock.json && git commit -m \"chore: bump version to $(node -p 'require(\"./package.json\").version')\" && npm run changelog && git add CHANGELOG.md && git commit --amend --no-edit && git tag v$(node -p 'require(\"./package.json\").version')",
    "release:major": "git diff --quiet && git diff --staged --quiet || (echo 'Working directory not clean. Commit or stash changes first.' && exit 1) && npm run version:major && git add package.json package-lock.json && git commit -m \"chore: bump version to $(node -p 'require(\"./package.json\").version')\" && npm run changelog && git add CHANGELOG.md && git commit --amend --no-edit && git tag v$(node -p 'require(\"./package.json\").version')",
    "changelog": "node scripts/generate-changelog.js",
    "changelog:unreleased": "node scripts/generate-changelog.js --unreleased",
    "test": "node scripts/test-radio-streams.js",
    "test:radio": "node scripts/test-radio-streams.js",
    "test:error-handling": "npx tsx -e \"import('./lib/utils/error-testing.ts').then(m => m.runErrorTests())\""
  },
  "dependencies": {
    "@capacitor/android": "^7.4.3",
    "@capacitor/app": "^7.0.0",
    "@capacitor/browser": "^7.0.2",
    "@capacitor/camera": "^7.0.0",
    "@capacitor/cli": "^7.4.3",
    "@capacitor/core": "^7.4.3",
    "@capacitor/device": "^7.0.2",
    "@capacitor/geolocation": "^7.0.0",
    "@capacitor/haptics": "^7.0.0",
    "@capacitor/ios": "^7.4.3",
    "@capacitor/keyboard": "^7.0.0",
    "@capacitor/network": "^7.0.2",
    "@capacitor/preferences": "^7.0.0",
    "@capacitor/push-notifications": "^7.0.0",
    "@capacitor/splash-screen": "^7.0.0",
    "@capacitor/status-bar": "^7.0.0",
    "@clerk/backend": "^2.4.1",
    "@clerk/nextjs": "^6.24.0",
    "@clerk/themes": "^2.2.55",
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/modifiers": "^9.0.0",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@googlemaps/react-wrapper": "^1.2.0",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-collapsible": "^1.1.12",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-progress": "^1.1.0",
    "@radix-ui/react-scroll-area": "^1.2.10",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.2.0",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.15",
    "@radix-ui/react-toggle": "^1.1.9",
    "@radix-ui/react-toggle-group": "^1.1.10",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@stripe/react-stripe-js": "^4.0.2",
    "@stripe/stripe-js": "^7.9.0",
    "@tabler/icons-react": "^3.35.0",
    "@tanstack/react-table": "^8.21.3",
    "@types/express-rate-limit": "^5.1.3",
    "@types/stripe": "^8.0.416",
    "@types/webpack": "^5.28.5",
    "axios": "^1.12.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "critters": "^0.0.23",
    "date-fns": "^4.1.0",
    "express-rate-limit": "^8.1.0",
    "framer-motion": "^12.23.18",
    "lucide-react": "^0.544.0",
    "next": "^15.5.4",
    "next-themes": "^0.4.6",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-use-measure": "^2.1.7",
    "recharts": "^2.15.4",
    "sonner": "^2.0.6",
    "stripe": "^18.5.0",
    "svix": "^1.69.0",
    "tailwind-merge": "^3.3.1",
    "tailwindcss-animate": "^1.0.7",
    "three": "^0.180.0",
    "vaul": "^1.1.2",
    "web-vitals": "^5.1.0",
    "webpack": "^5.101.3",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.0.0",
    "@commitlint/config-conventional": "^19.0.0",
    "@types/google.maps": "^3.58.1",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/three": "^0.180.0",
    "autoprefixer": "^10.4.21",
    "convex": "^1.25.2",
    "eslint": "9.35.0",
    "eslint-config-next": "15.5.3",
    "eslint-config-prettier": "^10.1.8",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.7.1",
    "eslint-plugin-prettier": "^5.5.4",
    "husky": "^9.0.0",
    "prettier-eslint": "^16.4.2",
    "tailwindcss": "^3.4.17",
    "tw-animate-css": "^1.3.5",
    "typescript": "^5",
    "vercel": "^48.1.4"
  }
}
